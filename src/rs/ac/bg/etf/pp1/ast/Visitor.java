// generated with ast extension for cup
// version 0.8
// 20/5/2019 20:50:8


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(EnumDecl EnumDecl);
    public void visit(Mulop Mulop);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(MethodDeclOption MethodDeclOption);
    public void visit(Relop Relop);
    public void visit(InterfaceMethDecl InterfaceMethDecl);
    public void visit(FormParsOption FormParsOption);
    public void visit(StatementList StatementList);
    public void visit(IdentVarList IdentVarList);
    public void visit(ConstVarDeclList ConstVarDeclList);
    public void visit(Addop Addop);
    public void visit(ActParsDesignatorOption ActParsDesignatorOption);
    public void visit(IdentConstList IdentConstList);
    public void visit(Operators Operators);
    public void visit(ValueOption ValueOption);
    public void visit(Factor Factor);
    public void visit(DesignatorStatementOption DesignatorStatementOption);
    public void visit(ConstVarDecl ConstVarDecl);
    public void visit(ExprSquareOption ExprSquareOption);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(ImplementsTypeList ImplementsTypeList);
    public void visit(BracketOption BracketOption);
    public void visit(ExprList ExprList);
    public void visit(ImplementsOption ImplementsOption);
    public void visit(VarDeclList VarDeclList);
    public void visit(ExprOption ExprOption);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorList DesignatorList);
    public void visit(InterfaceMethDeclList InterfaceMethDeclList);
    public void visit(StatementOption StatementOption);
    public void visit(ConditionOption ConditionOption);
    public void visit(ExtendsOption ExtendsOption);
    public void visit(Statement Statement);
    public void visit(IdentOrExpr IdentOrExpr);
    public void visit(VarDecl VarDecl);
    public void visit(NumOption NumOption);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ActParsOption ActParsOption);
    public void visit(ConditionFactList ConditionFactList);
    public void visit(MinusOption MinusOption);
    public void visit(IdentEnumList IdentEnumList);
    public void visit(RelopExprOption RelopExprOption);
    public void visit(ConstType ConstType);
    public void visit(StatamentOption StatamentOption);
    public void visit(AddopTermList AddopTermList);
    public void visit(Modd Modd);
    public void visit(Divv Divv);
    public void visit(Mull Mull);
    public void visit(NoNumOption NoNumOption);
    public void visit(YesNumOption YesNumOption);
    public void visit(OrExpr OrExpr);
    public void visit(OrIdent OrIdent);
    public void visit(DesignatorListOne DesignatorListOne);
    public void visit(DesignatorListMany DesignatorListMany);
    public void visit(DesignatorExprLSquare DesignatorExprLSquare);
    public void visit(DesignatorIdentExpr DesignatorIdentExpr);
    public void visit(DesignatorIdentFullstopIdent DesignatorIdentFullstopIdent);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(NoExprOption NoExprOption);
    public void visit(YesExprOption YesExprOption);
    public void visit(NoCondtionOption NoCondtionOption);
    public void visit(YesConditionOption YesConditionOption);
    public void visit(NoDesinatorStatementOption NoDesinatorStatementOption);
    public void visit(YesDesignatorStatementOption YesDesignatorStatementOption);
    public void visit(LessEqual LessEqual);
    public void visit(Less Less);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(Greater Greater);
    public void visit(NoEqual NoEqual);
    public void visit(Equal Equal);
    public void visit(OptionRelopExprNo OptionRelopExprNo);
    public void visit(OptionRelopExprYes OptionRelopExprYes);
    public void visit(ConditionFactExpr ConditionFactExpr);
    public void visit(ConditionFactMany ConditionFactMany);
    public void visit(ConditionFactOne ConditionFactOne);
    public void visit(CondTerm CondTerm);
    public void visit(ConditionTermMany ConditionTermMany);
    public void visit(ConditionTermOne ConditionTermOne);
    public void visit(Condition Condition);
    public void visit(NoActParsDesignatorOption NoActParsDesignatorOption);
    public void visit(ActParsDesignatorOptionY ActParsDesignatorOptionY);
    public void visit(ExprSquareOptionNo ExprSquareOptionNo);
    public void visit(ExprSquareOptionYes ExprSquareOptionYes);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolean FactorBoolean);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorDesig FactorDesig);
    public void visit(AMinus AMinus);
    public void visit(APlus APlus);
    public void visit(NoAddopTerms NoAddopTerms);
    public void visit(AddopTerms AddopTerms);
    public void visit(TermMany TermMany);
    public void visit(TermOne TermOne);
    public void visit(NoMinus NoMinus);
    public void visit(Minuss Minuss);
    public void visit(Expr Expr);
    public void visit(ExprsListOne ExprsListOne);
    public void visit(ExprsListMany ExprsListMany);
    public void visit(ActParams ActParams);
    public void visit(NoActParamOption NoActParamOption);
    public void visit(ActParamOption ActParamOption);
    public void visit(Assignop Assignop);
    public void visit(Decrement Decrement);
    public void visit(Increment Increment);
    public void visit(ActP ActP);
    public void visit(AssignError AssignError);
    public void visit(Assign Assign);
    public void visit(StatementOptionElse StatementOptionElse);
    public void visit(NoStatementOptionElse NoStatementOptionElse);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(StatementLi StatementLi);
    public void visit(PrintS PrintS);
    public void visit(ReadS ReadS);
    public void visit(ReturnS ReturnS);
    public void visit(ContinueS ContinueS);
    public void visit(BreakS BreakS);
    public void visit(ForS ForS);
    public void visit(IfS IfS);
    public void visit(DesignatorStatementError DesignatorStatementError);
    public void visit(DesignatorS DesignatorS);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(YesVarDeclList YesVarDeclList);
    public void visit(FormParam FormParam);
    public void visit(FormParsMany FormParsMany);
    public void visit(FormParsOne FormParsOne);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormPars FormPars);
    public void visit(MethodVoidName MethodVoidName);
    public void visit(MethodTypeNamee MethodTypeNamee);
    public void visit(MethodDecl MethodDecl);
    public void visit(InterfaceMethDeclaration InterfaceMethDeclaration);
    public void visit(NoInterfaceMethDeclarations NoInterfaceMethDeclarations);
    public void visit(InterfaceMethDeclarations InterfaceMethDeclarations);
    public void visit(InterfaceDelaration InterfaceDelaration);
    public void visit(NoValueOption NoValueOption);
    public void visit(YesValueOption YesValueOption);
    public void visit(EnumIdent EnumIdent);
    public void visit(IdentEL IdentEL);
    public void visit(EnumI EnumI);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(NoMethodDeclOption NoMethodDeclOption);
    public void visit(YesMethodDeclOption YesMethodDeclOption);
    public void visit(ImplTypeMany ImplTypeMany);
    public void visit(ImplTypeOne ImplTypeOne);
    public void visit(NoImplementsOption NoImplementsOption);
    public void visit(YesImplementsOption YesImplementsOption);
    public void visit(NoExtendsOption NoExtendsOption);
    public void visit(YesExtendsOption YesExtendsOption);
    public void visit(Inheritance Inheritance);
    public void visit(NoBracket NoBracket);
    public void visit(Bracket Bracket);
    public void visit(VarIdent VarIdent);
    public void visit(IdentVLError IdentVLError);
    public void visit(IdentVLErrorL IdentVLErrorL);
    public void visit(IdentVL IdentVL);
    public void visit(VarI VarI);
    public void visit(VarDeclarationError VarDeclarationError);
    public void visit(VarDeclarationTrue VarDeclarationTrue);
    public void visit(ErrorConst ErrorConst);
    public void visit(BooleanConst BooleanConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(IdentCL IdentCL);
    public void visit(ConstT ConstT);
    public void visit(Type Type);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ErrorD ErrorD);
    public void visit(InterfaceD InterfaceD);
    public void visit(EnumD EnumD);
    public void visit(ClassD ClassD);
    public void visit(VarD VarD);
    public void visit(ConstD ConstD);
    public void visit(NoConstVarDeclarations NoConstVarDeclarations);
    public void visit(ConstVarDeclarations ConstVarDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
